version: "3.4"

services:
  php:
    build:
      context: ./api_game
      target: api_platform_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 30s
      retries: 3
      start_period: 30s

  pwa:
    build:
      context: ./pwa
      target: api_platform_pwa_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy
      NEXT_PUBLIC_ENTRYPOINT: http://caddy

  caddy:
    build:
      context: api_game/
      target: api_platform_caddy
    depends_on:
      - php
      - pwa
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 444
        published: 444
        protocol: udp

  database:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=api-platform
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw

  
  
  php_core:
        build:
          context: ./api_core
          target: api_platform_php
        depends_on:
          - database_core
        restart: unless-stopped
        volumes:
          - php_core_socket:/var/run/php
        healthcheck:
          interval: 10s
          timeout: 3s
          retries: 3
          start_period: 30s

  pwa_core:
    build:
      context: ./pwa_core
      target: api_platform_pwa_prod
    environment:
      API_PLATFORM_CLIENT_GENERATOR_ENTRYPOINT: http://caddy_core
      NEXT_PUBLIC_ENTRYPOINT: http://caddy_core
    ports:
      - 3001:3001

  caddy_core:
    build:
      context: api_core/
      target: api_platform_caddy
    depends_on:
      - php_core
      - pwa_core
    environment:
      PWA_UPSTREAM: pwa_core:3001
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy_core:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - php_core_socket:/var/run/php
      - caddy_core_data:/data
      - caddy_core_config:/config
    ports:
      # HTTP
      - target: 81
        published: 81
        protocol: tcp
      # HTTPS
      - target: 446
        published: 446
        protocol: tcp
      # HTTP/3
      - target: 447
        published: 447
        protocol: udp

  database_core:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=api-root
    volumes:
      - db_core_data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw

volumes:
  php_socket:
  php_core_socket:
  db_data:
  db_core_data:
  caddy_data:
  caddy_core_data:
  caddy_config:
  caddy_core_config:

